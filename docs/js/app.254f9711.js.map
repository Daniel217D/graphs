{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/helpers.js","webpack:///./src/scripts/Status.js","webpack:///./src/scripts/Dot.js","webpack:///./src/scripts/Dots.js","webpack:///./src/scripts/Storage.js","webpack:///./src/scripts/CanvasCMGraphs.js","webpack:///./src/scripts/index.js","webpack:///./src/scripts/Cursor.js","webpack:///./src/scripts/DotsExamples.js","webpack:///./src/scripts/AskPopUp.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","distance","sx","sy","ex","ey","Math","sqrt","angle","atan2","direction","ang","x","cos","y","sin","angleToDirection","Status","htmlElement","status","field","innerText","this","title","set","text","Array","isArray","map","sub","sort","a","b","filter","li","forEach","el","substring","innerHTML","defaults","id","paths","color","Dot","$gcanvas","gDot","gArrow","dot","from","Dots","dots","count","reduce","acc","cur","find","undefined","findIndex","getIndexById","more","assign","except","includes","vars","getLastId","arr","args","add","d1","d2","isBidirectional","Number","isInteger","getDotById","every","addPath","console","warn","path","printPaths","printDot","maximal","disjunctions","conjunctions","conjunctions_temp","dots_ids","pair","index","next_pair","rec_conjunction_min_length","rec_conjunction","array","wasSuchEl","some","dis","pop","reverse","minimal","conj","min","internal","internal_stability","external","external_stability","cores","int","ext","Storage","store","update","clear","localStorage","setItem","JSON","stringify","getItem","parse","e","CanvasCMGraphs","SIZE","dir","sxArrow","syArrow","exArrow","eyArrow","arrow1","PI","arrow2","gLine","beginPath","line","closePath","stroke","save","circle","fill","fillText","restore","CanvasCM","canvas","$cg","document","getElementById","setSize","cursor","event","obj","rect","getBoundingClientRect","addEventListener","clientX","left","clientY","top","addDots","addPaths","demo1","events","storage","asking","container_id","options","buttons_container","child","createElement","classList","appendChild","container","remove","Promise","res","rej","target","tagName","once","getElementsByClassName","on","button","getByCoordinates","statusIs","getObj","draggableDotId","setPos","newDot","preventDefault","func","toggle","getAttribute","actions","alert","load","DataView","ArrayBuffer","pathsCount","setInt8","setUint32","offset","setFloat64","ps","psid","log","buffer","filename","type","file","Blob","navigator","msSaveOrOpenBlob","url","URL","createObjectURL","href","download","body","click","setTimeout","removeChild","revokeObjectURL","Date","getMonth","getDate","getHours","getMinutes","getSeconds","input","files","reader","FileReader","onload","Uint8Array","getUint8","dotsCount","getUint32","readDots","readPaths","getFloat64","firstId","secondId","readAsArrayBuffer","delete","canLoad","ask","answer","print","split","dotId","parseInt","render","requestAnimationFrame"],"mappings":"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","file":"js/app.254f9711.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([197,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const distance = (sx, sy, ex, ey) => Math.sqrt((sx - ex) ** 2 + (sy - ey) ** 2);\r\n\r\nconst angle = (sx, sy, ex, ey) => Math.atan2(ey - sy, ex - sx);\r\n\r\nconst direction = (...args) => {\r\n    const ang = angle(...args);\r\n    return {x: Math.cos(ang), y: Math.sin(ang)};\r\n};\r\n\r\nconst angleToDirection = (ang) => ({x: Math.cos(ang), y: Math.sin(ang)});\r\n\r\nconst setEventById = (events) => {\r\n    if(!Array.isArray(events)) {\r\n        events = [events];\r\n    }\r\n\r\n    events.forEach(({id, func}) => document.getElementById(id).addEventListener('click', func));\r\n};\r\nexport {distance, direction, angle, angleToDirection, setEventById};","export default class Status {\r\n    constructor(htmlElement) {\r\n        this.field = htmlElement;\r\n    }\r\n\r\n    status;\r\n\r\n    set = (status) => this.status = status;\r\n\r\n    clear = () => {\r\n        this.status = \"\";\r\n        this.field.innerText = \"\";\r\n    };\r\n\r\n    print({title = false, data: status = false}) {\r\n        if (status !== false) this.set(status);\r\n        let text = \"\";\r\n\r\n\r\n        if (Array.isArray(status)) {\r\n            if (status.length === 0) {\r\n                text = \"Пустое множество\";\r\n            } else {\r\n                status\r\n                    .map(sub => sub.sort((a,b) => a - b))\r\n                    .sort((a,b) => a.length - b.length || a[0] - b[0])\r\n                    .filter(sub => sub.length > 0)\r\n                    .map(sub => {\r\n                        let li = \"\";\r\n                        let data = \"\";\r\n\r\n                        sub.forEach(el => {\r\n                            li += el + \", \";\r\n                            data += el + \",\";\r\n                        });\r\n\r\n                        li = li.substring(0, li.length - 2);\r\n                        data = data.substring(0, data.length - 1);\r\n                        text += \"<li data-array='\" + data + \"'>\" + li + \";</li>\";\r\n                    });\r\n                text = \"<ul>\" + text + \"</ul>\";\r\n            }\r\n        } else {\r\n            text = status;\r\n        }\r\n\r\n        if(title) {\r\n            text = \"<h4>\" + title + \"</h4>\" + text;\r\n        }\r\n        this.field.innerHTML = text;\r\n    }\r\n}","const defaults = {\r\n    id: -1,\r\n    paths: [],\r\n    r: 30,\r\n    color: \"black\"\r\n};\r\n\r\nexport default class Dot {\r\n    constructor(id = defaults.id, x, y, r = defaults.r, color = defaults.color, paths = defaults.paths) {\r\n        this.id = id;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.paths = Array.from(paths);\r\n        this.r = r;\r\n        this.color = color;\r\n    }\r\n\r\n    printDot = ($gcanvas) => {\r\n        $gcanvas.gDot(this.x, this.y, this.r, this.color, this.id);\r\n    };\r\n\r\n    printPaths = ($gcanvas) => {\r\n        this.paths.forEach(({id, x, y}) => {\r\n            $gcanvas.gArrow(this.x, this.y, x, y, this.r);\r\n        });\r\n    };\r\n\r\n    addPath = (dot) => this.paths.push(dot);\r\n\r\n    setPos = (x, y) => {\r\n        this.x = x;\r\n        this.y = y;\r\n    };\r\n}\r\n\r\nexport {defaults};","import {distance} from \"./helpers\";\r\nimport Dot, {defaults} from './Dot';\r\n\r\nexport default class Dots {\r\n    constructor($gcanvas) {\r\n        this.$gcanvas = $gcanvas;\r\n    }\r\n\r\n    dots = [];\r\n\r\n    count = () => {return this.dots.length;};\r\n\r\n    pathsCount = () => {\r\n        let count = this.dots.reduce((acc, cur) => {\r\n            return acc + cur.paths.length;\r\n        }, 0);\r\n\r\n        this.dots.forEach(dot => {\r\n            dot.paths.forEach(d => {\r\n                if(d.paths.find(p => p.paths[dot.id] !== undefined)) {\r\n                    count--;\r\n                }\r\n            });\r\n        });\r\n\r\n        return count;\r\n    };\r\n\r\n    getIndexById = (id) => {\r\n        return this.dots.findIndex(dot => dot.id === id);\r\n    };\r\n\r\n    getDotById = (id) => this.dots[this.getIndexById(id)];\r\n\r\n    getByCoordinates = (x, y, more = {}) => {\r\n        more = Object.assign({r: defaults.r, except: []}, more);\r\n        return this.dots.find(dot => distance(x, y, dot.x, dot.y) <= dot.r + more.r && !more.except.includes(dot.id));\r\n    };\r\n\r\n    getLastId = () => this.dots[this.dots.length - 1]?.id || 0;\r\n\r\n    add = (...vars) => {\r\n        const dot = new Dot(this.getLastId() + 1, ...vars);\r\n        this.dots.push(dot);\r\n        return dot;\r\n    };\r\n\r\n    addDots = (arr) => arr.forEach(args => this.add(...args));\r\n\r\n    addPath = (d1, d2, isBidirectional = false) => {\r\n        if (Number.isInteger(d1)) {\r\n            d1 = this.getDotById(d1);\r\n        }\r\n\r\n        if (Number.isInteger(d2)) {\r\n            d2 = this.getDotById(d2);\r\n        }\r\n        if (d1 === undefined || d2 === undefined) {\r\n            console.warn(\"Dots::addPath\", d1, d2);\r\n            return;\r\n        }\r\n\r\n        if (d1.id === d2.id || !d1.paths.every(dot => dot.id !== d2.id)) {\r\n            return;\r\n        }\r\n\r\n        d1.addPath(d2);\r\n        \r\n        if(isBidirectional) {\r\n            d2.addPath(d1);\r\n        }\r\n    };\r\n\r\n    addPaths = (arr) => arr.forEach(args => this.addPath(...args));\r\n\r\n    remove = (id) => {\r\n        this.dots.splice(this.getIndexById(id), 1);\r\n        this.dots.forEach(({paths}) => paths.forEach((path, i) => path.id === id ? delete paths[i] : ''));\r\n    };\r\n\r\n    clear = () => this.dots = [];\r\n\r\n    print = () => {\r\n        if(this.$gcanvas) {\r\n            this.dots.forEach(dot => dot.printPaths(this.$gcanvas));\r\n            this.dots.forEach(dot => dot.printDot(this.$gcanvas));\r\n        }\r\n    };\r\n\r\n    internal_stability = (maximal = false) => {\r\n        maximal = !maximal;\r\n        if (this.dots.length === 0) return []; // если граф пустой возвращаем пустой массив\r\n\r\n        let disjunctions = []; // массив парных дизъюнкций\r\n        let conjunctions = []; // массив днф\r\n        let conjunctions_temp = []; // провемежуточный массив с переменными входящими в одну из конъюнкций днф\r\n        let dots_ids = this.dots.map(({id}) => id); // массив id точек\r\n\r\n        // составляется массив парных дизъюнкций\r\n        this.dots.forEach(dot => dot.paths.forEach(path => disjunctions.push([dot.id, path.id])));\r\n\r\n        // если в массиве нет ребер, возвращаем массив со всеми вершинами\r\n        if (disjunctions.length === 0) return [dots_ids.map(id => id)];\r\n\r\n        // убираем дизъюнкии отличающееся положением переменных\r\n        // [[1,2],[2,3],[2,1]] => [[1,2],[2,3]]\r\n        disjunctions.forEach(pair => {\r\n            let index = disjunctions.findIndex(next_pair => next_pair[0] === pair[1] && next_pair[1] === pair[0]);\r\n            if (index >= 0) {\r\n                disjunctions.splice(index, 1);\r\n            }\r\n        });\r\n\r\n        /*\r\n        rec_conjunction_min_length - переменная для минимальной длины отдельной конъюнкций\r\n        требуется найти минимальные по длине дизъюнкции, чтобы затем их инвертировать\r\n        и получить наборы с максимальным количеством независимых вершин\r\n        */\r\n        let rec_conjunction_min_length = this.dots.length;\r\n\r\n        // рекурсивная функция для приведения массива парных дизъюнкций к массиву днф\r\n        const rec_conjunction = (array, index = 0) => {\r\n            let wasSuchEl;\r\n            //Если дошли до последней пары дизъюнкций ...\r\n            if (array.length - 1 === index) {\r\n                //Цикл перебирает левую и правую переменную (id вершин) в паре дизъюнкции\r\n                array[index].forEach(el => {\r\n                    // Проверка, есть ли переменная в промежуточной конъюнкции\r\n                    wasSuchEl = conjunctions_temp.includes(el);\r\n                    // Провека на то что провемежуточный массив содержит не больше вершин чем минимум\r\n                    // Учитывая включение/невключение переменной el\r\n                    if (maximal || conjunctions_temp.length + !wasSuchEl <= rec_conjunction_min_length) {\r\n                        // Если промежуточный массив в итоге получился короче, то\r\n                        // выставляем новую минимальную длину и обнуляем массив днф\r\n                        if (!maximal && conjunctions_temp.length + !wasSuchEl < rec_conjunction_min_length) {\r\n                            rec_conjunction_min_length = conjunctions_temp.length + !wasSuchEl;\r\n                            conjunctions = [];\r\n                        }\r\n                        // В переменную помещается все элементы массива conjunctions_temp и переменая el если её нет в массиве\r\n                        const push = wasSuchEl ? [...conjunctions_temp] : [...conjunctions_temp, el];\r\n                        // Проверка, что такого набора вершин еще нет в днф\r\n                        // Если массив push не совпадает со всеми массивом в conjunctions, то...\r\n                        const canPush = !conjunctions.some(dis => dis.every(d => push.includes(d)));\r\n                        // Добавляем его в conjunctions (днф)\r\n                        if (canPush) conjunctions.push(push);\r\n                    }\r\n                });\r\n            } else {// Иначе\r\n                //Цикл перебирает левую и правую переменную (id вершин) в паре дизъюнкции\r\n                array[index].forEach(el => {\r\n                    // Проверка, есть ли переменная в промежуточной конъюнкции\r\n                    wasSuchEl = conjunctions_temp.includes(el);\r\n                    // Провека на то что провемежуточный массив содержит не больше вершин чем минимум\r\n                    // Учитывая включение/невключение переменной el\r\n                    if (maximal || conjunctions_temp.length + !wasSuchEl <= rec_conjunction_min_length) {\r\n                        //Если переменной el не было добавляем\r\n                        if (!wasSuchEl) conjunctions_temp.push(el);\r\n                        //Продолжаем рекурсию\r\n                        rec_conjunction(array, index + 1);\r\n                        //Если переменная el была убираем\r\n                        if (!wasSuchEl) conjunctions_temp.pop();\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        //Запуск функции\r\n        rec_conjunction(disjunctions);\r\n\r\n        return conjunctions\r\n            .map(dis => dots_ids.filter(id => dis.findIndex(el => el === id) === -1)) // инвертирование полученных вершин\r\n            .reverse(); // располагаем точки по возрастанию id первой вершины\r\n    };\r\n\r\n    external_stability = (minimal = false) => {\r\n        if (this.dots.length === 0) return []; // если граф пустой возвращаем пустой массив\r\n\r\n        let disjunctions = []; // массив дизъюнкций\r\n        let conjunctions = []; // массив днф\r\n        let conjunctions_temp = []; // провемежуточный массив с переменными входящими в одну из конъюнкций днф\r\n        let dots_ids = this.dots.map(({id}) => id); // массив id точек\r\n\r\n        // составляется массив парных дизъюнкций\r\n        this.dots.forEach(dot => disjunctions.push([dot.id, ...dot.paths.map(path => path.id)]));\r\n\r\n        // если в массиве нет ребер, возвращаем массив со всеми вершинами\r\n        if (disjunctions.length === 0) return [dots_ids.map(id => id)];\r\n\r\n        // убираем дизъюнкии отличающееся положением переменных\r\n        disjunctions.forEach((conj, index, array) => {\r\n            for (let i = index + 1; i < array.length; i++) {\r\n                if (array[i].length === conj.length && array[i].every(el => conj.includes(el))) {\r\n                    array.splice(i, 1);\r\n                }\r\n            }\r\n        });\r\n\r\n        // рекурсивная функция для приведения массива парных дизъюнкций к массиву днф\r\n        const rec_conjunction = (array, index = 0) => {\r\n            let wasSuchEl;\r\n            //Если дошли до последней пары дизъюнкций ...\r\n            if (array.length - 1 === index) {\r\n                //Цикл перебирает  переменные (id вершин) в ююю\r\n                array[index].forEach(el => {\r\n                    // Проверка, есть ли переменная в промежуточной конъюнкции\r\n                    wasSuchEl = conjunctions_temp.includes(el);\r\n                    // В переменную помещается все элементы массива conjunctions_temp и переменая el если её нет в массиве\r\n                    const push = wasSuchEl ? [...conjunctions_temp] : [...conjunctions_temp, el];\r\n                    // Проверка, что такого набора вершин еще нет в днф\r\n                    // Если массив push не совпадает со всеми массивом в conjunctions, то...\r\n                    const canPush = !conjunctions.some(dis => push.length >= dis.length && dis.every(d => push.includes(d)));\r\n                    // Добавляем его в conjunctions (днф)\r\n                    if (canPush) {\r\n                        conjunctions = conjunctions.filter(dis => dis.length <= push.length || !push.every(p => dis.includes(p)));\r\n                        conjunctions.push(push);\r\n                    }\r\n                });\r\n            } else {// Иначе\r\n                //Цикл перебирает левую и правую переменную (id вершин) в ююю\r\n                array[index].forEach(el => {\r\n                    // Проверка, есть ли переменная в промежуточной конъюнкции\r\n                    wasSuchEl = conjunctions_temp.includes(el);\r\n                    //Если переменной el не было добавляем\r\n                    if (!wasSuchEl) conjunctions_temp.push(el);\r\n                    //Продолжаем рекурсию\r\n                    rec_conjunction(array, index + 1);\r\n                    //Если переменная el была убираем\r\n                    if (!wasSuchEl) conjunctions_temp.pop();\r\n                });\r\n            }\r\n        };\r\n\r\n        //Запуск функции\r\n        rec_conjunction(disjunctions);\r\n\r\n        if(minimal) {\r\n            const min = conjunctions.reduce((min, arr) => arr.length < min ? arr.length : min, conjunctions[0].length);\r\n\r\n            return conjunctions.filter(dis => dis.length === min);\r\n        } else {\r\n            return  conjunctions;\r\n        }\r\n\r\n    };\r\n\r\n    cores = () => {\r\n        const internal = this.internal_stability();\r\n        const external = this.external_stability();\r\n\r\n        if(internal.length === 0 || external.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        const max_internal = internal.reduce((min, arr) => arr.length < min ? arr.length : min, internal[0].length);\r\n        const min_external = internal.reduce((min, arr) => arr.length < min ? arr.length : min, internal[0].length);\r\n        if(max_internal < min_external) {\r\n            return [];\r\n        }\r\n\r\n        let cores = [];\r\n\r\n        internal.forEach(int => {\r\n            if (external.some(ext => ext.length === int.length && ext.every(x => int.includes(x)))) {\r\n                cores.push(int);\r\n            }\r\n        });\r\n\r\n        return cores;\r\n    };\r\n}","import Dots from './Dots';\r\n\r\nconst STORE_NAME = 'graphs';\r\n\r\nexport default class Storage {\r\n    constructor(dots) {\r\n        this.dots = dots;\r\n\r\n        this.store = window.localStorage.getItem('graphs');\r\n        if (!this.store) {\r\n            this.store = [];\r\n        }\r\n\r\n        try {\r\n            this.store = JSON.parse(this.store);\r\n        } catch (e) {\r\n            this.store = [];\r\n        }\r\n\r\n        this.update();\r\n    }\r\n\r\n    save = (id) => {\r\n        this.store[id] = this.dots.dots.map(({id, x, y, paths}) => ({id, x, y, paths: paths.map(({id}) => id)}));\r\n        this.update();\r\n    };\r\n\r\n    load = (id) => {\r\n        const data = this.store[id];\r\n        if (!data) return false;\r\n\r\n        this.dots.clear();\r\n        data.forEach(({x,y}) => this.dots.add(x,y));\r\n        data.forEach(({id, paths}) => paths.forEach(path => this.dots.addPath(id, path)));\r\n\r\n        return true;\r\n    };\r\n\r\n    canLoad = (id) => {\r\n        return !!this.store[id];\r\n    };\r\n\r\n    update = () => {\r\n        window.localStorage.setItem(STORE_NAME, JSON.stringify(this.store));\r\n    };\r\n\r\n    delete = (id) => {\r\n        delete this.store[id];\r\n    };\r\n\r\n    clear = () => {\r\n        this.store = [];\r\n        this.update();\r\n    };\r\n}","import {CanvasCM} from 'canvas-chaining-method';\r\nimport {defaults} from './Dot';\r\nimport {direction, angle, angleToDirection} from './helpers';\r\n\r\nclass CanvasCMGraphs extends CanvasCM {\r\n    gArrow = (sx, sy, ex, ey, r = defaults.r) => {\r\n        const SIZE = 20;\r\n\r\n        const dir = direction(sx, sy, ex, ey);\r\n        const sxArrow = ex - dir.x * r;\r\n        const syArrow = ey - dir.y * r;\r\n        const exArrow = ex - dir.x * 2 * SIZE;\r\n        const eyArrow = ey - dir.y * 2 * SIZE;\r\n\r\n        const arrow1 = angleToDirection(angle(sxArrow, syArrow, exArrow, eyArrow) - (30 * Math.PI / 180));\r\n        const arrow2 = angleToDirection(angle(sxArrow, syArrow, exArrow, eyArrow) + (30 * Math.PI / 180));\r\n\r\n        return this.gLine(sx, sy, ex, ey)\r\n            .gLine(sxArrow, syArrow, sxArrow + arrow1.x * SIZE, syArrow + arrow1.y * SIZE)\r\n            .gLine(sxArrow, syArrow, sxArrow + arrow2.x * SIZE, syArrow + arrow2.y * SIZE);\r\n    };\r\n\r\n    gLine = (sx, sy, ex, ey) => {\r\n        return this.beginPath()\r\n            .line(sx, sy, ex, ey)\r\n            .closePath()\r\n            .stroke();\r\n    };\r\n\r\n    gDot = (x, y, r = defaults.r, color = defaults.color, text = \"\") => {\r\n        return this.save()\r\n            .beginPath()\r\n            .set({\r\n                \"fillStyle\": \"white\",\r\n                \"strokeStyle\": color,\r\n                \"font\": \"30px Arial\",\r\n                \"textAlign\": \"center\"\r\n            })\r\n            .circle(x, y, r)\r\n            .stroke()\r\n            .fill()\r\n            .set(\"fillStyle\", color)\r\n            .fillText(text, x, y + r / 4)\r\n            .closePath()\r\n            .restore();\r\n    };\r\n}\r\n\r\nconst $cg = (canvas) => {\r\n    return new CanvasCMGraphs(canvas);\r\n};\r\n\r\nexport default $cg;\r\nexport {CanvasCMGraphs};","import '../styles/index.scss';\r\n\r\nimport { setEventById } from './helpers';\r\nimport Cursor from './Cursor';\r\nimport Status from \"./Status\";\r\nimport Storage from \"./Storage\";\r\nimport Ask from \"./AskPopUp\";\r\n\r\nimport Dots from './Dots';\r\nimport DotsExamples from './DotsExamples';\r\nimport $cg from './CanvasCMGraphs';\r\n\r\nconst $gcanvas = $cg(document.getElementById('canvas')).setSize();\r\nconst cursor = new Cursor($gcanvas.get('canvas'));\r\nconst dots = new Dots($gcanvas);\r\nconst status = new Status(document.getElementById(\"status\"));\r\n(new DotsExamples(dots)).demo1();\r\nconst storage = new Storage(dots);\r\nconst asking = new Ask();\r\n\r\n$gcanvas.on('mousedown', (e) => {\r\n    if(e.button !== 0) { //only left click\r\n        return;\r\n    }\r\n    const dot = dots.getByCoordinates(cursor.x, cursor.y, {r: 0});\r\n    if (dot) {\r\n        cursor.set(\"mousedown\", \"dot\", dot);\r\n    }\r\n}).on('mousemove', () => {\r\n    if (cursor.statusIs(\"mousedown\", \"dot\") && !cursor.statusIs(\"click\", \"dot\")) {\r\n        const dot = cursor.getObj(\"mousedown\");\r\n        cursor.set(\"mousedown\", false);\r\n        cursor.set(\"drag\", \"dot\", dot);\r\n    }\r\n\r\n    if (cursor.statusIs(\"drag\", \"dot\")) {\r\n        const draggableDotId = cursor.getObj(\"drag\").id;\r\n        const dot = dots.getByCoordinates(cursor.x, cursor.y, {except: [draggableDotId]});\r\n        if (!dot || dot.id === draggableDotId) {\r\n            cursor.getObj(\"drag\").setPos(cursor.x, cursor.y);\r\n        }\r\n    }\r\n}).on('click', () => {\r\n    if (cursor.statusIs(\"drag\", \"dot\")) {\r\n        cursor.set(\"drag\", false);\r\n        return;\r\n    }\r\n\r\n    if (cursor.statusIs(\"mousedown\", \"dot\")) {\r\n        cursor.set(\"mousedown\", false);\r\n    }\r\n\r\n    const dot = dots.getByCoordinates(cursor.x, cursor.y);\r\n\r\n    if (dot) {\r\n        const dot_r0 = dots.getByCoordinates(cursor.x, cursor.y, {r: 0});\r\n        if (dot_r0 && !cursor.statusIs('click', 'dot')) {\r\n            cursor.set(\"click\", \"dot\", dot);\r\n        } else if (cursor.statusIs(\"click\", \"dot\")) {\r\n            if (dot) {\r\n                dots.addPath(cursor.getObj(\"click\"), dot);\r\n                cursor.set(\"click\", false);\r\n            }\r\n        }\r\n    } else {\r\n        const newDot = dots.add(cursor.x, cursor.y);\r\n\r\n        if (cursor.statusIs(\"click\", \"dot\")) {\r\n            dots.addPath(cursor.getObj(\"click\"), newDot);\r\n            cursor.set(\"click\", false);\r\n        }\r\n    }\r\n}).on('contextmenu', (e) => {\r\n    const dot = dots.getByCoordinates(cursor.x, cursor.y, {r: 0});\r\n    if(dot) {\r\n        dots.remove(dot.id);\r\n    }\r\n    e.preventDefault();\r\n});\r\n\r\nsetEventById([\r\n    {\r\n        id: \"canvas-storage\", func: (() => {\r\n            const el = document.getElementById('canvas-saves');\r\n            return () => el.classList.toggle('hidden');\r\n        })()\r\n    },\r\n    {\r\n        id: \"canvas-saves\", func: async ({target}) => {\r\n            if (target.tagName === \"BUTTON\") {\r\n                const id = target.getAttribute('data-save');\r\n                const actions = {\r\n                    'save': () => {storage.save(id); alert('Граф сохранен в браузере');},\r\n                    'rewrite': () => {storage.save(id); alert('Сохранение пересаписано');},\r\n                    'file_save': () => {\r\n                        const dots = new Dots;\r\n                        (new Storage(dots)).load(id);\r\n                        const data = new DataView(new ArrayBuffer(12 + dots.count() * 20 + dots.pathsCount() * 12));\r\n\r\n                        data.setInt8(0, 71);\r\n                        data.setInt8(1, 82);\r\n                        data.setInt8(2, 68);\r\n                        data.setInt8(3, 1);\r\n                        data.setUint32(4, dots.count(), true);\r\n\r\n                        let offset = 8;\r\n\r\n                        for (let i = 0; i < dots.count(); i++) {\r\n                            data.setUint32(offset + 20 * i, dots.dots[i].id - 1, true);\r\n                            data.setFloat64(offset + 4 + 20 * i, dots.dots[i].x, true);\r\n                            data.setFloat64(offset + 12 + 20 * i, dots.dots[i].y,true);\r\n                        }\r\n\r\n                        offset += 20 * dots.count();\r\n\r\n                        data.setUint32(offset, dots.pathsCount(), true);\r\n\r\n                        offset += 4;\r\n\r\n                        const paths = [];\r\n\r\n                        dots.dots.forEach(dot => {\r\n                            paths[dot.id - 1] = dot.paths.map(d => {\r\n                                if(paths[d.id - 1] === undefined) {\r\n                                    return [d.id - 1, 1];\r\n                                } else {\r\n                                    const find = paths[d.id - 1].find(el => el !== undefined && el[0] === dot.id - 1);\r\n                                    if(find!== undefined) {\r\n                                        find[1] = 2;\r\n                                    } else {\r\n                                        return [d.id - 1, 1];\r\n                                    }\r\n                                }\r\n                            });\r\n                        });\r\n                        let i = 0;\r\n                        paths.forEach((ps, psid) => {\r\n                            ps.forEach(p => {\r\n                                if(p !== undefined) {\r\n                                    data.setUint32(offset + 12 * i, psid, true);\r\n                                    data.setUint32(offset + 4 + 12 * i, p[0], true);\r\n                                    data.setUint32(offset + 8 + 12 * i,p[1], true);\r\n                                    i++;\r\n                                }\r\n                            });\r\n                        });\r\n                        console.log(data.buffer);\r\n\r\n                        function download(data, filename, type) {\r\n                            const file = new Blob([data], {type: type});\r\n                            if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n                                window.navigator.msSaveOrOpenBlob(file, filename);\r\n                            else { // Others\r\n                                const a = document.createElement(\"a\"),\r\n                                    url = URL.createObjectURL(file);\r\n                                a.href = url;\r\n                                a.download = filename;\r\n                                document.body.appendChild(a);\r\n                                a.click();\r\n                                setTimeout(function() {\r\n                                    document.body.removeChild(a);\r\n                                    window.URL.revokeObjectURL(url);\r\n                                    alert('Граф сохранен в файл ' + filename);\r\n                                }, 0);\r\n                            }\r\n                        }\r\n\r\n                        download(data.buffer, `graph-${(new Date).getMonth() + 1}-${(new Date).getDate()}-${(new Date).getHours()}-${(new Date).getMinutes()}-${(new Date).getSeconds()}.grd`, 'binary');\r\n                    },\r\n                    'load': () => {storage.load(id); alert('Граф загружен из браузера');},\r\n                    'file_load' : () => {\r\n                        const input = document.getElementById('fileLoader');\r\n                        input.addEventListener(\"change\", function () {\r\n                            const file = this.files[0];\r\n                            const reader = new FileReader();\r\n                            reader.onload = function () {\r\n                                const data = new DataView((new Uint8Array(this.result)).buffer);\r\n\r\n                                if (data.getUint8(0) !== 71 || data.getUint8(1) !== 82 || data.getUint8(2) !== 68) {\r\n                                    alert(\"Неверный формат файла\");\r\n                                    return false;\r\n                                }\r\n                                let offset;\r\n\r\n                                const dotsCount = data.getUint32(4, true);\r\n\r\n                                offset = 8 + dotsCount * 20;\r\n                                const pathsCount = data.getUint32(offset, true);\r\n\r\n                                const readDots = [];\r\n                                const readPaths = [];\r\n\r\n                                offset = 8;\r\n                                for (let i = 0; i < dotsCount; i++) {\r\n                                    readDots.push({\r\n                                        id: data.getUint32(offset + 20 * i, true) + 1,\r\n                                        x: data.getFloat64(offset + 4 + 20 * i, true),\r\n                                        y: data.getFloat64(offset + 12 + 20 * i, true)\r\n                                    });\r\n                                }\r\n\r\n                                offset = 8 + 20 * dotsCount + 4;\r\n\r\n                                for (let i = 0; i < pathsCount; i++) {\r\n                                    readPaths.push({\r\n                                        firstId: data.getUint32(offset + 12 * i, true) + 1,\r\n                                        secondId: data.getUint32(offset + 4 + 12 * i, true) + 1,\r\n                                        dir: data.getUint32(offset + 8 + 12 * i, true)\r\n                                    });\r\n                                }\r\n\r\n                                dots.clear();\r\n                                readDots.forEach(({x,y}) => dots.add(x,y));\r\n                                readPaths.forEach(({firstId, secondId, dir}) => {\r\n                                    if(dir === 0) {\r\n                                        dots.addPath(secondId, firstId);\r\n                                    } else if(dir === 1) {\r\n                                        dots.addPath(firstId, secondId);\r\n                                    } else {\r\n                                        dots.addPath(secondId, firstId);\r\n                                        dots.addPath(firstId, secondId);\r\n                                    }\r\n                                });\r\n\r\n                                storage.save(id); \r\n                                alert('Граф загружен из файла');\r\n                            };\r\n                            reader.readAsArrayBuffer(file);\r\n                        }, {once: true});\r\n                        input.click();\r\n                    },\r\n                    'delete': () => {storage.delete(id); alert('Сохранение удалено из браузера');},\r\n                    'close': () => {/*do nothing*/}\r\n                };\r\n                let answer;\r\n\r\n                if(!storage.canLoad(id)) {\r\n                    answer = await asking.ask([\r\n                        {value: 'save', text: 'Сохранить'},\r\n                        {value: 'file_load', text: 'Загрузить из файла и сохранить'},\r\n                        {value: 'close', text: 'Закрыть'}\r\n                    ]);\r\n                } else {\r\n                    answer = await asking.ask([\r\n                        {value: 'rewrite', text: 'Перезаписать'},\r\n                        {value: 'load', text: 'Загрузить'},\r\n                        {value: 'delete', text: 'Удалить'},\r\n                        {value: 'file_load', text: 'Загрузить из файла и перезаписать'},\r\n                        {value: 'file_save', text: 'Сохранить в файл'},\r\n                        {value: 'close', text: 'Закрыть'}\r\n                    ]);\r\n                }\r\n\r\n                actions[answer]();\r\n            }\r\n        }\r\n    },\r\n    {\r\n        id: \"canvas-clear\", func: () => {\r\n            dots.clear();\r\n            status.clear();\r\n        }\r\n    },\r\n    {id: \"canvas-internal_stability\", func: () => status.print({title: 'Внутренне устойчивые', data: dots.internal_stability()})},\r\n    {id: \"canvas-maximal_internal_stability\", func: () => status.print({title: 'Макc. внутренне устойчивые', data: dots.internal_stability(true)})},\r\n    {id: \"canvas-external_stability\", func: () => status.print({title: 'Внешне устойчивые', data: dots.external_stability()})},\r\n    {id: \"canvas-minimal_external_stability\", func: () => status.print({title: 'Мин. внешне устойчивые', data: dots.external_stability(true)})},\r\n    {id: \"canvas-cores\", func: () => status.print({title: 'Ядра', data: dots.cores()})},\r\n]);\r\n\r\nstatus.field.addEventListener('mouseover', ({target}) => {\r\n    if (target.tagName === \"LI\") {\r\n        const array = target.getAttribute('data-array').split(',');\r\n        array.forEach(dotId => dots.getDotById(parseInt(dotId)).color = \"#DD1C1A\");\r\n\r\n        target.addEventListener('mouseleave', () => array.forEach(dotId => dots.getDotById(parseInt(dotId)).color = \"black\", {once: true}));\r\n    }\r\n});\r\n\r\n(function render (){\r\n    requestAnimationFrame(render);\r\n    $gcanvas.clear();\r\n    dots.print();\r\n\r\n    if (cursor.statusIs(\"click\", \"dot\")) {\r\n        $gcanvas.gArrow(cursor.getObj(\"click\").x, cursor.getObj(\"click\").y, cursor.x, cursor.y, 0);\r\n    }\r\n})();\r\n\r\nwindow.addEventListener('resize',  () => $gcanvas.setSize());","export default class Cursor {\r\n    constructor(el) {\r\n        this.x = 0;\r\n        this.y = 0;\r\n\r\n        const rect = el.getBoundingClientRect();\r\n\r\n        el.addEventListener('mousemove', (e) => {\r\n            this.x = e.clientX - rect.left;\r\n            this.y = e.clientY - rect.top;\r\n        });\r\n    }\r\n\r\n    set = (event, status, obj = {}) => this[event] = {status, obj};\r\n\r\n    statusIs = (event, status) => status === this[event]?.status;\r\n\r\n    getObj = (event) => this[event] !== undefined ? this[event].obj : undefined;\r\n}","export default class DotsExamples {\r\n    constructor(dots) {\r\n        this.dots = dots;\r\n    }\r\n\r\n    demo1 = () => {\r\n        this.dots.clear();\r\n        this.dots.addDots([\r\n            [50, 150], [200, 150], [200, 300], [75, 350], [300, 350],\r\n            [300, 50], [300, 150], [350, 200], [300, 250], [100, 250]\r\n        ]);\r\n        this.dots.addPaths([\r\n            [1, 2], [1, 10], [1, 4], [2, 3], [3, 2], [3, 5], [3, 4],\r\n            [2, 4], [5, 2], [5, 4], [6, 2], [6, 7], [7, 8], [8, 5], [8, 9],\r\n            [9, 5], [10, 4]\r\n        ]);\r\n    };\r\n\r\n    demo2 = () => {\r\n        this.dots.clear();\r\n        this.dots.addDots([[300, 300], [600, 300], [600, 600], [300, 600]]);\r\n        this.dots.addPaths([[1, 2], [1, 3], [1, 4], [2, 1], [3, 1], [4, 3]]);\r\n    };\r\n}","export default class AskPopUp {\r\n    constructor(container_id = 'askPopUp') {\r\n        this.container = document.getElementById(container_id);\r\n        this.buttons_container = this.container.getElementsByClassName('js-askPopUp-container')[0];\r\n    }\r\n\r\n    //[{value: '', text:''}...]\r\n    ask = (options) => {\r\n        this.buttons_container.innerHTML = '';\r\n\r\n        options.forEach(({value, text}) => {\r\n            const child = document.createElement('button');\r\n            child.classList.add('.ask-button');\r\n            child.value = value;\r\n            child.innerText = text;\r\n            this.buttons_container.appendChild(child);\r\n        });\r\n\r\n        this.container.classList.remove('hidden');\r\n        return new Promise((res, rej) => {\r\n            this.buttons_container.addEventListener('click', (({target}) => {\r\n                try {\r\n                    if (target.tagName === \"BUTTON\") {\r\n                        this.container.classList.add('hidden');\r\n                        res(target.value);\r\n                    }\r\n                } catch (e) {\r\n                    rej(e);\r\n                }\r\n\r\n            }), {once: true});\r\n        });\r\n    };\r\n}"],"sourceRoot":""}